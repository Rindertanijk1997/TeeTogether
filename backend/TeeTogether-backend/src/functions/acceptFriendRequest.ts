import { APIGatewayEvent } from "aws-lambda";
import { DynamoDB } from "aws-sdk";

const dynamoDb = new DynamoDB.DocumentClient();

export const handler = async (event: APIGatewayEvent) => {
  console.log("üîπ Accepterar v√§nf√∂rfr√•gan:", JSON.stringify(event));

  try {
    const body = JSON.parse(event.body || "{}");
    const { userId, friendId } = body;

    if (!userId || !friendId) {
      return { statusCode: 400, body: JSON.stringify({ error: "userId och friendId kr√§vs." }) };
    }

    // üîπ Ta bort v√§nf√∂rfr√•gan fr√•n FriendRequests
    const deleteParams = {
      TableName: "FriendRequests",
      Key: { RequesterId: friendId, FriendId: userId },
    };
    await dynamoDb.delete(deleteParams).promise();

    // üîπ L√§gg till v√§nrelation i UserFriends f√∂r **b√•da** anv√§ndarna
    const batchWriteParams = {
      RequestItems: {
        UserFriends: [
          { PutRequest: { Item: { UserId: userId, FriendId: friendId, CreatedAt: new Date().toISOString() } } },
          { PutRequest: { Item: { UserId: friendId, FriendId: userId, CreatedAt: new Date().toISOString() } } },
        ],
      },
    };

    await dynamoDb.batchWrite(batchWriteParams).promise();

    return { statusCode: 201, body: JSON.stringify({ message: "V√§nf√∂rfr√•gan accepterad!" }) };
  } catch (error) {
    console.error("‚ùå Fel vid acceptans av v√§nf√∂rfr√•gan:", error);
    return { statusCode: 500, body: JSON.stringify({ error: "N√•got gick fel vid acceptans av v√§nf√∂rfr√•gan." }) };
  }
};

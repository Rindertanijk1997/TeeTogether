const API_BASE_URL = "https://w9h1wx1u7l.execute-api.eu-north-1.amazonaws.com";

// 游댳 Hj칛lpfunktion f칬r att hantera fetch-f칬rfr친gningar med felhantering
const fetchData = async (url: string, options: RequestInit = {}) => {
  try {
    const response = await fetch(url, options);
    if (!response.ok) throw new Error(`Fel vid API-anrop: ${response.statusText}`);
    return await response.json();
  } catch (error) {
    console.error("API-fel:", error);
    return { error: "Ett fel uppstod vid API-anrop." };
  }
};

// 游댳 Registrera en ny anv칛ndare
export const registerUser = async (username: string, password: string, city: string, age: number) => {
  return fetchData(`${API_BASE_URL}/users/register`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ username, password, city, age }),
  });
};

// 游댳 Logga in en anv칛ndare
export const loginUser = async (username: string, password: string) => {
  return fetchData(`${API_BASE_URL}/login`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ username, password }),
  });
};

// 游댳 H칛mta en specifik anv칛ndare
export const getUser = async (userId: string) => {
  return fetchData(`${API_BASE_URL}/users/${userId}`);
};

// 游댳 Uppdatera en anv칛ndares profil
export const updateUser = async (userId: string, updateData: { username?: string; city?: string; currentHCP?: number }) => {
  return fetchData(`${API_BASE_URL}/users/${userId}`, {
    method: "PUT",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify(updateData),
  });
};

// 游댳 H칛mta alla anv칛ndare
export const getUsers = async () => {
  return fetchData(`${API_BASE_URL}/users`);
};

// 游댳 Skicka en v칛nf칬rfr친gan
export const sendFriendRequest = async (userId: string, friendId: string) => {
  return fetchData(`${API_BASE_URL}/friends/request`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ userId, friendId }),
  });
};

// 游댳 H칛mta v칛nf칬rfr친gningar (de du har f친tt)
export const getFriendRequests = async (userId: string) => {
  return fetchData(`${API_BASE_URL}/friends/requests?userId=${userId}`);
};

// 游댳 Acceptera en v칛nf칬rfr친gan
export const acceptFriendRequest = async (userId: string, friendId: string) => {
  return fetchData(`${API_BASE_URL}/friends/accept`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ userId, friendId }),
  });
};

// 游댳 Avvisa en v칛nf칬rfr친gan (om du vill kunna neka en f칬rfr친gan)
export const declineFriendRequest = async (userId: string, friendId: string) => {
  return fetchData(`${API_BASE_URL}/friends/decline`, {
    method: "DELETE",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ userId, friendId }),
  });
};

// 游댳 H칛mta anv칛ndarens v칛nner
export const getFriends = async (userId: string) => {
  return fetchData(`${API_BASE_URL}/friends/search?userId=${userId}`);
};

// 游댳 Ta bort en v칛n
export const removeFriend = async (userId: string, friendId: string) => {
  return fetchData(`${API_BASE_URL}/friends/remove`, {
    method: "DELETE",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ userId, friendId }),
  });
};

// 游댳 Registrera en golf-rond
export const registerRound = async (userId: string, course: string, score: number, newHCP: number) => {
  return fetchData(`${API_BASE_URL}/registerRound`, {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ userId, course, score, newHCP }),
  });
};

export const getUserRounds = async (userId: string) => {
  const response = await fetch(`${API_BASE_URL}/rounds?userId=${userId}`);
  
  if (!response.ok) {
    throw new Error("Kunde inte h칛mta ronder");
  }

  const data = await response.json();
  console.log("游꿢 H칛mtade ronder fr친n API:", data);

  return data; // Returnerar den h칛mtade datan
};


// 游댳 S칬ka efter golfv칛nner
export const searchGolfFriends = async (userId: string) => {
  return fetchData(`${API_BASE_URL}/friends/search?userId=${userId}`);
};
